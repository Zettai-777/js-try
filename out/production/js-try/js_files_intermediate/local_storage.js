/*
    Local Storage
    Локальное хранилище в браузере, которое сохраняет данные, которые будут доступны после перезагрузки страницы.
    Что-то типа урезанной версии базы данных для браузера.
    - Получить доступ к local storage можно через одноимённый метод localStorage глобального объекта
    браузера window;
    - При записи значений в хранилище необходимо приводить их к строковому виду, так как локальное хранилище умеет
    работать исключительно со строковыми значениями
    - Можно посмотреть что находится в хранилище из браузера из режима разработчика: Application -> Storage -> Local Storage
    - Данные ассоциируются с текущим доменом
    - При сохранении объектов в хранилище, чтобы переопределить toString и не получать Object object необходимо использовать
    глобальный объект JSON и его метод stringify();
    - При получении сохранённого объекта из хранилища для дальнейшей работы с ним необходимо использовать метод parse
    глобального объекта JSON, который из строкового представления объекта получает сам объект
    - local storage отличаеся от cookie объемом (обычно примерно 5mb), а также в отличии от cookie информация о local storage
    не улетает с запросом на сервер, что обеспечивает большую секьюрность
 */

const myNumber = 17;
//Методы localStorage
localStorage.setItem('number', myNumber.toString());           //записываем по ключу некоторое значение в хранилище
console.log(localStorage.getItem('number'));               //получаем значение из хранилища
localStorage.removeItem('number');                         //удаляем значение из хранилища по ключу
localStorage.clear();                                          //очищение хранилища

//Работа с объектами
const obj = {
    type: 'object',
    size: 234
};

localStorage.setItem('object', JSON.stringify(obj));
const objFromLS = JSON.parse(localStorage.getItem('object'));
objFromLS.size = 123;
console.log(obj);
console.log(objFromLS);

//Работа с local storage по одному домену из разных вкладок
window.addEventListener('storage', ev => {        //создаём слушателя и получаем событие на работу с хранилищем
    console.log(ev);                                          //выводим информацию о событии
});